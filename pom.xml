<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.proitc</groupId>
  <artifactId>design-patterns-java</artifactId>
  <version>0.0.1</version>

  <packaging>pom</packaging>
  <name>design-patterns-java</name>
  <description>Java Design Patterns Samples</description>

  <modules>
    <module>behavioral</module>
    <module>structural</module>
    <module>creational</module>
  </modules>

  <properties>
    <!-- Project configuration -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <!-- Presentation versions & config-->
    <project.slides.directory>${project.build.directory}/generated-slides</project.slides.directory>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <asciidoctor.maven.plugin.version>1.5.7.1</asciidoctor.maven.plugin.version>
    <asciidoctorj.version>1.5.8.1</asciidoctorj.version>
    <sass-maven-plugin.version>3.7.1</sass-maven-plugin.version>
    <jruby.version>9.2.5.0</jruby.version>
    <revealjs.version>3.7.0</revealjs.version>
    <asciidoctor-revealjs.version>2.0.0</asciidoctor-revealjs.version>
    <theme.dir>${project.slides.directory}/theme</theme.dir>
    <!-- Test versions -->
    <mockito-core.version>2.13.0</mockito-core.version>
    <junit.jupiter.version>5.2.0</junit.jupiter.version>
    <assertj.version>3.10.0</assertj.version>
    <mockito-core.version>2.21.0</mockito-core.version>
    <!-- Plugins versions -->
    <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
    <maven-checkstyle-plugin.version>3.0.0</maven-checkstyle-plugin.version>
    <maven-pmd-plugin.version>3.9.0</maven-pmd-plugin.version>
    <spotbugs-maven-plugin.version>3.1.1</spotbugs-maven-plugin.version>
    <maven.sevntu.checkstyle.plugin.version>1.27.0</maven.sevntu.checkstyle.plugin.version>
    <maven.sevntu.checkstyle.plugin.version>1.27.0</maven.sevntu.checkstyle.plugin.version>
    <maven.sevntu-checkstyle-check.checkstyle.version>8.18</maven.sevntu-checkstyle-check.checkstyle.version>
    <maven.jacoco.plugin.version>0.8.0</maven.jacoco.plugin.version>
    <linkXRef>false</linkXRef>
    <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
    <download-maven-plugin.version>1.4.1</download-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Modules -->
      <dependency>
        <groupId>com.proitc</groupId>
        <artifactId>strategy</artifactId>
        <version>0.0.1</version>
      </dependency>
      <dependency>
        <groupId>com.proitc</groupId>
        <artifactId>structural</artifactId>
        <version>0.0.1</version>
      </dependency>

      <!-- Testing dependencies -->
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.github.sevntu-checkstyle</groupId>
              <artifactId>sevntu-checkstyle-maven-plugin</artifactId>
              <version>${maven.sevntu.checkstyle.plugin.version}</version>
            </dependency>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${maven.sevntu-checkstyle-check.checkstyle.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <consoleOutput>true</consoleOutput>
            <configLocation>./google_checks.xml</configLocation>
            <excludes/>
          </configuration>
          <executions>
            <execution>
              <id>checkstyle</id>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <failOnViolation>true</failOnViolation>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/*IntegrationTest.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <configuration>
          <aggregate>true</aggregate>
          <minimumTokens>100</minimumTokens>
          <sourceEncoding>utf-8</sourceEncoding>
          <targetJdk>${java.version}</targetJdk>
          <skipEmptyReport>false</skipEmptyReport>
          <ignoreLiterals>false</ignoreLiterals>
          <excludes>
            <exclude>**/generated-sources/**/*.java</exclude>
          </excludes>
          <excludeRoots>
            <excludeRoot>${basedir}/target/generated-sources</excludeRoot>
            <excludeRoot>${basedir}/target/generated-sources/annotations</excludeRoot>
            <excludeRoot>${basedir}/target/generated-sources/xjc</excludeRoot>
            <excludeRoot>${basedir}/target/generated-sources/cxf</excludeRoot>
          </excludeRoots>
          <rulesets>
            <ruleset>${basedir}/pmd-rulesets.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>
        <configuration>
          <effort>Max</effort>
          <threshold>Default</threshold>
          <omitVisitors/>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${maven.jacoco.plugin.version}</version>
        <configuration>
          <dataFile>${project.build.directory}/jacoco.exec</dataFile>
          <excludes>
            <exclude>com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask*.class</exclude>
            <exclude>com/puppycrawl/tools/checkstyle/grammars/*.class</exclude>
            <exclude>com/puppycrawl/tools/checkstyle/grammars/javadoc/*.class</exclude>
            <exclude>com/puppycrawl/tools/checkstyle/gui/*.class</exclude>
          </excludes>
        </configuration>
		<executions>
			<execution>
				<goals>
					<goal>prepare-agent</goal>
				</goals>
			</execution>
			<execution>
				<id>jacoco-report</id>
				<phase>test</phase>
				<goals>
					<goal>report</goal>
				</goals>
			</execution>
		</executions>
      </plugin>
      <!-- Presentation plugin -->
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <version>${download-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>install-asciidoctor-revealjs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>
                https://github.com/asciidoctor/asciidoctor-reveal.js/archive/v${asciidoctor-revealjs.version}.zip
              </url>
              <unpack>true</unpack>
              <outputFileName>asciidoctor-reveal.js-${asciidoctor-revealjs.version}.zip
              </outputFileName>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>install-revealjs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://github.com/hakimel/reveal.js/archive/${revealjs.version}.zip</url>
              <unpack>true</unpack>
              <outputFileName>reveal.js-${revealjs.version}.zip</outputFileName>
              <outputDirectory>${project.slides.directory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>${asciidoctor.maven.plugin.version}</version>
        <dependencies>
          <!-- Comment this section to use the default jruby artifact provided by the plugin -->
          <dependency>
            <groupId>org.jruby</groupId>
            <artifactId>jruby-complete</artifactId>
            <version>${jruby.version}</version>
          </dependency>
          <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
          <dependency>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctorj</artifactId>
            <version>${asciidoctorj.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <sourceDirectory>src/main/asciidoc</sourceDirectory>
        </configuration>
        <executions>
          <execution>
            <id>generate-slides</id>
            <phase>process-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.slides.directory}</outputDirectory>
              <backend>revealjs</backend>
              <templateDir>
                ${project.build.directory}/asciidoctor-reveal.js-${asciidoctor-revealjs.version}/templates
              </templateDir>
              <sourceHighlighter>highlightjs</sourceHighlighter>
              <attributes>
                <!--
                    As we are downloading reveal.js in runtime, it sits in a nonstandard folder `reveal.js-${revealjs.version}`
                -->
                <revealjsdir>reveal.js-${revealjs.version}</revealjsdir>
                <src-incl>${project.basedir}/</src-incl>
                <!-- put here the reveal.js specific attributes -->
                <revealjs_customtheme>theme/ude.css</revealjs_customtheme>
                <revealjs_transition>linear</revealjs_transition>
                <project-version>${project.version}</project-version>
                <revealjs_history>true</revealjs_history>
                <revealjs_width>1280</revealjs_width>
                <revealjs_height>720</revealjs_height>
                <revealjs_margin>0</revealjs_margin>
                <revealjs_slideNumber>true</revealjs_slideNumber>
                <highlightjs-theme>theme/highlightjs-theme/github.css</highlightjs-theme>
              </attributes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>nl.geodienstencentrum.maven</groupId>
        <artifactId>sass-maven-plugin</artifactId>
        <version>${sass-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>update-template-stylesheets</id>
            <phase>process-resources</phase>
            <goals>
              <goal>update-stylesheets</goal>
            </goals>
            <configuration>
              <destination>${theme.dir}</destination>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <executions>
          <execution>
            <id>copy-stylesheet-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${theme.dir}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/sass/</directory>
                  <filtering>false</filtering>
                  <excludes>
                    <exclude>*.scss</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-to-docs</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/docs</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.slides.directory}</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
